development_complete <- subset(development, Year <= 2008)
head(development_complete)
str(development_complete)
install.packages("WDI")
install.packages("googleVis")
library(WDI)
library(ggplot2)
library(googleVis)
library(dplyr)
install.packages("googleVis")
library(WDI)
library(ggplot2)
library(googleVis)
library(dplyr)
?WDI
?WDI_search
WDIsearch(string = "gdp", field = "name", short = TRUE,
cache = NULL)
a=WDI_data()
WDI_data
a=WDI_data
a
View(a)
a[1]
dim(a)
a[[1]]
View(a[[1]])
View(a[[2]])
a =WDI_data
b=a[[1]]
c=a[[2]]
unique(c$region)
c$region
str(c)
names(c)
class(c)
d=as.dataframe(c)
d=as.data.frame(c)
names(d)
e= unique(d$region)
len(e)
e
length(e)
dat = WDI(indicator='NY.GNP.PCAP.CD', country="all",start=1970, end=2016)
l = dim(dat)
data1 <- dat[2163:l[1],]
gg=gvisMotionChart(data, idvar='country', timevar='year',options=list())
plot(gg)
WDIsearch(string='expectancy', field='name', cache=NULL)
WDIsearch(string='population', field='name', cache=NULL)
View(c)
View(b)
WDIsearch(string='expectancy', field='name', cache=NULL)
View(b)
m=WDIsearch(string='population', field='name', cache=NULL)
View(m)
n=WDIsearch(string='gdp', field='name', cache=NULL)
View(n)
WDIsearch(string='gdp', field='name', cache=NULL)
n=WDIsearch(string='gross domestic product', field='name', cache=NULL)
n=WDIsearch(string='gross domestic ', field='name', cache=NULL)
WDIsearch(string='gross domestic product', field='name', cache=NULL)
WDIsearch(string='gross domestic', field='name', cache=NULL)
WDIsearch(string='crime', field='name', cache=NULL)
WDIsearch(string='literacy', field='name', cache=NULL)
library(WDI)
library(ggplot2)
library(googleVis)
library(dplyr)
library("plyr")
dat = WDI(indicator='NY.GNP.PCAP.CD', country="all",start=1970, end=2016)
l = dim(dat)
data1 <- dat[2163:l[1],]
gg=gvisMotionChart(data, idvar='country', timevar='year',options=list())
pop = WDI(indicator='SP.POP.TOTL', country="all",start=1970, end=2016)
gdp= WDI(indicator='NY.GDP.MKTP.CD', country="all",start=1970, end=2016)
le= WDI(indicator='SP.DYN.LE00.IN', country="all",start=1970, end=2016)
dim(pop)
dim(gdp)
dim(le)
names(pop)[3]="Population"
names(le)[3]="Life Expectancy"
names(gdp)[3]="GDP"
gdp_life_exp <- join(gdp, le)
development <- join(gdp_life_exp,pop)
#2163
# Remove aggregate nations
ff <- cc$region != "Aggregates"
ccc <- cc[ff,]
a =WDI_data
b=a[[1]]
c=a[[2]]
cc = as.data.frame(c)
ff <- cc$region != "Aggregates"
ccc <- cc[ff,]
dd = subset(development, country %in% ccc$country)
ee = join(dd,ccc)
dim(ee)
gg<- gvisMotionChart(ee,
idvar = "country",
timevar = "year",
xvar = "GDP",
yvar = "Life Expectancy",
sizevar ="Population",
colorvar = "region")
plot(gg)
getwd()
dir()
cat(gg$html$chart, file="temp.html")
getwd()
dir()
getwd()
library(WDI)
library(ggplot2)
library(googleVis)
library(dplyr)
library("plyr")
pop = WDI(indicator='SP.POP.TOTL', country="all",start=1970, end=2016)
gdp= WDI(indicator='NY.GDP.MKTP.CD', country="all",start=1970, end=2016)
le= WDI(indicator='SP.DYN.LE00.IN', country="all",start=1970, end=2016)
names(pop)[3]="Population"
names(le)[3]="Life Expectancy"
names(gdp)[3]="GDP"
gdp_life_exp <- join(gdp, le)
development <- join(gdp_life_exp,pop)
a =WDI_data
b=a[[1]]
c=a[[2]]
cc = as.data.frame(c)
ff <- cc$region != "Aggregates"
ccc <- cc[ff,]
dd = subset(development, country %in% ccc$country)
ee = join(dd,ccc)
gg<- gvisMotionChart(ee,
idvar = "country",
timevar = "year",
xvar = "GDP",
yvar = "Life Expectancy",
sizevar ="Population",
colorvar = "region")
plot(gg)
gg<- gvisMotionChart(ee,
idvar = "country",
timevar = "year",
xvar = "GDP",
yvar = "Life Expectancy",
sizevar ="Population",
colorvar = "region")
plot(gg)
plot(gg)
library(WDI)
library(ggplot2)
library(googleVis)
library(dplyr)
pop = WDI(indicator='SP.POP.TOTL', country="all",start=1970, end=2016)
gdp= WDI(indicator='NY.GDP.MKTP.CD', country="all",start=1970, end=2016)
le= WDI(indicator='SP.DYN.LE00.IN', country="all",start=1970, end=2016)
names(pop)[3]="Population"
names(le)[3]="Life Expectancy"
names(gdp)[3]="GDP"
gdp_life_exp <- join(gdp, le)
development <- join(gdp_life_exp,pop)
wdi_data =WDI_data
wdi_data[[1]]
b=wdi_data[[1]]
View(b)
wdi_data =WDI_data
# The 1st matrix is the list is the set of all World Bank Indicators
indicators=wdi_data[[1]]
# The 2nd  matrix gives the set of countries and regions
countries=wdi_data[[2]]
df = as.data.frame(countries)
head(df)
aa <- countries_df$region != "Aggregates"
# Remove the aggregates
countries_df <- df[aa,]
aa <- df$region != "Aggregates"
# Remove the aggregates
countries_df <- df[aa,]
dim(countries_df)
bb = subset(development, country %in% ccc$country)
developmentDF = join(bb,countries_df)
dim(developmentDF)
cc = complete.cases(developmentDF)
dd = developmentDF[cc,]
dim(dd)
dd = complete.cases(developmentDF)
developmentDF = cc[dd,]
dd = complete.cases(cc)
developmentDF = cc[dd,]
countries_df <- df[aa,]
# Subset from the development data only those corresponding to the countries
bb = subset(development, country %in% ccc$country)
cc = join(bb,countries_df)
dim(cc)
dd = complete.cases(cc)
developmentDF = cc[dd,]
dim(developmentDF)
gg<- gvisMotionChart(developmentDF,
idvar = "country",
timevar = "year",
xvar = "GDP",
yvar = "Life Expectancy",
sizevar ="Population",
colorvar = "region")
plot(gg)
income = WDI(indicator='NY.GDP.PCAP.PP.CD', country="all",start=1970, end=2016)
population = WDI(indicator='SP.POP.TOTL', country="all",start=1960, end=2016)
# GDP
gdp= WDI(indicator='NY.GDP.MKTP.CD', country="all",start=1960, end=2016)
#Life expectancy
lifeExpectancy= WDI(indicator='SP.DYN.LE00.IN', country="all",start=1960, end=2016)
# Per capita
income = WDI(indicator='NY.GDP.PCAP.PP.CD', country="all",start=1960, end=2016)
#Fertility
fertility = WDI(indicator='SP.DYN.TFRT.IN', country="all",start=1960, end=2016)
names(population)[3]="Population"
names(lifeExpectancy)[3]="Life Expectancy"
names(gdp)[3]="GDP"
names(income)[3]="Per capita income"
names(fertility)[3]="Fertility"
j1 <- join(population, gdp)
j2 <- join(j1,lifeExpectancy)
j3 <- join(j2,income)
j4 <- join(j3,fertility)
wdi_data =WDI_data
# The 1st matrix is the list is the set of all World Bank Indicators
indicators=wdi_data[[1]]
# The 2nd  matrix gives the set of countries and regions
countries=wdi_data[[2]]
df = as.data.frame(countries)
aa <- df$region != "Aggregates"
# Remove the aggregates
countries_df <- df[aa,]
bb = subset(wbData, country %in% ccc$country)
wbData <- join(j3,fertility)
bb = subset(wbData, country %in% ccc$country)
cc = join(bb,countries_df)
dd = complete.cases(cc)
developmentDF = cc[dd,]
dim(developmentDF)
dim(cc)
dim(wDT)
gg<- gvisMotionChart(developmentDF,
idvar = "country",
timevar = "year",
xvar = "GDP",
yvar = "Life Expectancy",
sizevar ="Population",
colorvar = "region")
plot(gg)
gg<- gvisMotionChart(cc,
idvar = "country",
timevar = "year",
xvar = "GDP",
yvar = "Life Expectancy",
sizevar ="Population",
colorvar = "region")
plot(gg)
poverty= WDI(indicator='SI.POV.2DAY', country="all",start=1960, end=2016)
names(poverty)[3]="Poverty headcount ratio"
j1 <- join(population, gdp)
j2 <- join(j1,lifeExpectancy)
j3 <- join(j2,income)
j4 <- join(j3,poverty)
wbData <- join(j4,fertility)
bb = subset(wbData, country %in% ccc$country)
cc = join(bb,countries_df)
gg<- gvisMotionChart(cc,
idvar = "country",
timevar = "year",
xvar = "GDP",
yvar = "Life Expectancy",
sizevar ="Population",
colorvar = "region")
plot(gg)
elecAccess= WDI(indicator='EG.ELC.ACCS.ZS', country="all",start=1960, end=2016)
# Electric power consumption
elecConsumption= WDI(indicator='EG.USE.ELEC.KH.PC', country="all",start=1960, end=2016)
#CO2 emissions
co2Emissions= WDI(indicator='EN.ATM.CO2E.KT', country="all",start=1960, end=2016)
j1 <- join(population, gdp)
j2 <- join(j1,elecAccess)
j3 <- join(j2,elecConsumption)
j4 <- join(j3,co2Emissions)
wbData <- join(j4,fertility)
ee = subset(wbData1, country %in% ccc$country)
j1 <- join(population, gdp)
j2 <- join(j1,elecAccess)
j3 <- join(j2,elecConsumption)
wbData1 <- join(j3,co2Emissions)
ee = subset(wbData1, country %in% ccc$country)
ff = join(ee,countries_df)
names(population)[3]="Population"
names(gdp)[3]="GDP"
names(elecAccess)[3]="Access to Electricity"
names(elecConsumption)[3]="Electric power consumption per capita"
names(co2Emissions)[3]="CO2 emisions"
gg<- gvisMotionChart(ff,
idvar = "country",
timevar = "year",
xvar = "GDP",
yvar = "Access to Electricity",
sizevar ="Population",
colorvar = "region")
plot(gg)
population = WDI(indicator='SP.POP.TOTL', country="all",start=1960, end=2016)
# GDP
gdp= WDI(indicator='NY.GDP.MKTP.CD', country="all",start=1960, end=2016)
# Access to electricity
elecAccess= WDI(indicator='EG.ELC.ACCS.ZS', country="all",start=1960, end=2016)
# Electric power consumption per capita
elecConsumption= WDI(indicator='EG.USE.ELEC.KH.PC', country="all",start=1960, end=2016)
#CO2 emissions
co2Emissions= WDI(indicator='EN.ATM.CO2E.KT', country="all",start=1960, end=2016)
names(population)[3]="Population"
names(gdp)[3]="GDP"
names(elecAccess)[3]="Access to Electricity"
names(elecConsumption)[3]="Electric power consumption per capita"
names(co2Emissions)[3]="CO2 emisions"
j1 <- join(population, gdp)
j2 <- join(j1,elecAccess)
j3 <- join(j2,elecConsumption)
wbData1 <- join(j3,co2Emissions)
```
wdi_data =WDI_data
# The 1st matrix is the list is the set of all World Bank Indicators
indicators=wdi_data[[1]]
# The 2nd  matrix gives the set of countries and regions
countries=wdi_data[[2]]
df = as.data.frame(countries)
aa <- df$region != "Aggregates"
# Remove the aggregates
countries_df <- df[aa,]
# Subset from the development data only those corresponding to the countries
ee = subset(wbData1, country %in% ccc$country)
ff = join(ee,countries_df)
gg<- gvisMotionChart(ff,
idvar = "country",
timevar = "year",
xvar = "GDP",
yvar = "Access to Electricity",
sizevar ="Population",
colorvar = "region")
plot(gg)
sanitationAccess= WDI(indicator='SH.STA.ACSN', country="all",start=1960, end=2016)
names(sanitationAccess)[3]="Access to sanitation(% popn)"
names(sanitationAccess)[3]="Access to sanitation(% popn)"
j1 <- join(population, gdp)
j2 <- join(j1,elecAccess)
j3 <- join(j2,elecConsumption)
j4 <- join(j3,co2Emissions)
wbData1 <- join(j3,sanitationAccess)
ee = subset(wbData1, country %in% ccc$country)
ff = join(ee,countries_df)
gg<- gvisMotionChart(ff,
idvar = "country",
timevar = "year",
xvar = "GDP",
yvar = "Access to Electricity",
sizevar ="Population",
colorvar = "region")
plot(gg)
library(WDI)
library(ggplot2)
library(googleVis)
library(plyr)
gg<- gvisMotionChart(cc,
idvar = "country",
timevar = "year",
xvar = "GDP",
yvar = "Life Expectancy",
sizevar ="Population",
colorvar = "region")
plot(gg)
cat(gg$html$chart, file="chart1.html")
cat(gg$html$chart, file="chart1.html")
getwd()
gg1<- gvisMotionChart(ff,
idvar = "country",
timevar = "year",
xvar = "GDP",
yvar = "Access to Electricity",
sizevar ="Population",
colorvar = "region")
plot(gg1)
cat(gg1$html$chart, file="chart2.html")
setwd("C:/software/cricket-package/cricsheet/googly")
raina <- getBatsmanDetails(team="Chennai Super Kings",name="SK Raina",dir="./data")
library(yorkr)
library(yorkr)
raina <- getBatsmanDetails(team="Chennai Super Kings",name="SK Raina",dir="./data")
dim(raina)
batsmanRunsVsDeliveries(raina, "SK Raina")
dir()
dir("./data")
load("Chennai Super Kings-BattingDetails.RData")
load("./data/Chennai Super Kings-BattingDetails.RData")
ls()
csk <- battingDetails
dim(csk)
head(csk)
setwd("C:/software/cricket-package/googly/data")
setwd("C:/software/cricket-package/cricsheet/googly")
setwd("C:/software/cricket-package/cricsheet/googly/data")
load("Chennai Super Kings-BattingDetails.RData")
csk_details <- battingDetails
load("Deccan Chargers-BattingDetails.RData")
dc_details <- battingDetails
load("Delhi Daredevils-BattingDetails.RData")
dd_details <- battingDetails
load("Kings XI Punjab-BattingDetails.RData")
kxip_details <- battingDetails
load("Kochi Tuskers Kerala-BattingDetails.RData")
ktk_details <- battingDetails
load("Kolkata Knight Riders-BattingDetails.RData")
csk_batsmen <- csk_details %>% distinct(batsman)
library(dplyr)
csk_batsmen <- csk_details %>% distinct(batsman)
csk_batsmen <- as.character(csk_batsmen$batsmen)
csk_batsmen <- as.character(csk_batsmen$batsman)
names(csk_batsmen)
dim(csk_details)
names(csk_details)
csk_batsmen <- csk_details %>% distinct(batsman)
csk_batsmen <- as.character(csk_batsmen$batsman)
csk_batsmen <- csk_batsmen[order(csk_batsmen$batsman)]
batsmen <- csk_details %>% distinct(batsman)
batsmen <- as.character(batsmen$batsman)
names(batsmen)
batsmen
batsmen <- csk_details %>% distinct(batsman)
class(batsmen)
batsmen$batsman
batsmen <- as.character(batsmen$batsman)
class(batsmen)
order(batsmen)
batsmen[order(batsmen$batsman)]
batsmen <- csk_details %>% distinct(batsman)
batsmen <- as.character(batsmen$batsman)
batsmen <- csk_details %>% distinct(batsman)
names(batsmen)
class(batsmen$batsman)
batsmen <- as.character(batsmen$batsman)
batsmen
length(batsmen)
order(batsmen)
sort(batsmen)
batsmen <- csk_details %>% distinct(batsman)
batsmen <- as.character(batsmen$batsman)
csk_batsmen <- sort(batsmen)
length(csk_batsmen)
?which
which(csk_batsmen=="S Randiv")
batsmen[38]
batsmen[37]
batsmen[39]
csk_batsmen[38]
setwd("C:/software/cricket-package/cricsheet/googly/data")
load("Chennai Super Kings-BattingDetails.RData")
csk_details <- battingDetails
load("Deccan Chargers-BattingDetails.RData")
dc_details <- battingDetails
load("Delhi Daredevils-BattingDetails.RData")
dd_details <- battingDetails
load("Kings XI Punjab-BattingDetails.RData")
kxip_details <- battingDetails
load("Kochi Tuskers Kerala-BattingDetails.RData")
ktk_details <- battingDetails
load("Kolkata Knight Riders-BattingDetails.RData")
kkr_details <- battingDetails
load("Mumbai Indians-BattingDetails.RData")
mi_details <- battingDetails
load("Pune Warriors-BattingDetails.RData")
pw_details <- battingDetails
load("Rajasthan Royals-BattingDetails.RData")
rr_details <- battingDetails
load("Royal Challengers Bangalore-BattingDetails.RData")
rcb_details <- battingDetails
load("Sunrisers Hyderabad-BattingDetails.RData")
sh_details <- battingDetails
load("Gujarat Lions-BattingDetails.RData")
gl_details <- battingDetails
load("Rising Pune Supergiants-BattingDetails.RData")
rps_details <- battingDetails
source("funcs.R")
getwd()
setwd("..")
source("funcs.R")
a <- getBatsmen(csk_details)
source("funcs.R")
a <- getBatsmen(csk_details)
a
dc_batsmen <- getBatsmen(dc_details)
dc_batsmen <- getBatsmen(dc_details)a <- select(csk_details,batsman,runs,strikeRate)
csk_batsmen <- getBatsmen(csk_details)
dc_batsmen <- getBatsmen(dc_details)
dd_batsmen <- getBatsmen(dd_details)
kxip_batsmen <- getBatsmen(kxip_details)
ktk_batsmen <- getBatsmen(ktk_details)
kkr_batsmen <- getBatsmen(kkr_details)
mi_batsmen <- getBatsmen(mi_details)
pw_batsmen <- getBatsmen(pw_details)
rr_batsmen <- getBatsmen(rr_details)
rcb_batsmen <- getBatsmen(rcb_details)
sh_batsmen <- getBatsmen(sh_details)
gl_batsmen <- getBatsmen(gl_details)
rps_batsmen <- getBatsmen(rps_details)
kkr_batsmen
ktk_batsmen
shiny::runApp()
runApp()
